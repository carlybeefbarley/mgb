// Pen tool.

import bline from './bresenhamLine'

let priorPoint = null // Used for tracking line draws from prior point to current point

const ToolPen = {
  label: 'Pen',
  name: 'penTool',
  tooltip: 'Click and drag to draw individual pixels on the frame. Alt-click to use like the eyedropper tool',
  icon: 'pencil icon', // Semantic-UI icon CSS class
  editCursor: 'crosshair',
  supportsDrag: true,
  shortcut: 'p',
  changesImage: true, // This does cause changes to the image, so image is dirty if this tool used
  level: 1,

  handleMouseDown(drawEnv) {
    // drawEnv is in the format generated by EditGraphic.collateDrawingToolEnv()
    if (drawEnv.event.altKey === true) {
      // alt-key is a shortcut for eyedropper
      let imageDataAtMouse = drawEnv.previewCtx.getImageData(drawEnv.x, drawEnv.y, 1, 1)
      let d = imageDataAtMouse.data
      drawEnv.setColorRGBA(...d)
      priorPoint = null
    } else {
      priorPoint = { x: drawEnv.x, y: drawEnv.y }
      drawEnv.setPixelsAt(drawEnv.x, drawEnv.y)
    }
  },

  handleMouseMove(drawEnv) {
    if (priorPoint) {
      bline(drawEnv.setPixelsAt, priorPoint.x, priorPoint.y, drawEnv.x, drawEnv.y)
      priorPoint = { x: drawEnv.x, y: drawEnv.y }
    }
  },

  handleMouseUp(drawEnv) {
    if (priorPoint) {
      bline(drawEnv.setPixelsAt, priorPoint.x, priorPoint.y, drawEnv.x, drawEnv.y)
      priorPoint = { x: drawEnv.x, y: drawEnv.y }
      priorPoint = null
    }
  },

  handleMouseLeave(drawEnv) {},
}

export default ToolPen
