// Select Tool 

const ToolSelect = {
  label: "Select",
  name: "selectTool",
  tooltip: "Click and drag to select an area in the asset",
  icon: "crosshairs icon",        // Semantic-UI icon CSS class
  editCursor: "crosshair",
  supportsDrag: true,
  shortcut: 's',
  changesImage: false,             // This does cause changes to the image, so image is dirty if this tool used
  level: 5,

  handleMouseDown: ( drawEnv ) => {
    // drawEnv is in the format generated by EditGraphic.collateDrawingToolEnv()

    ToolSelect._storedPreviewImageData = drawEnv.previewCtx.getImageData(0,0, drawEnv.width, drawEnv.height)
    ToolSelect._startx = drawEnv.x
    ToolSelect._starty = drawEnv.y
    drawEnv.unselect();
  },

  handleMouseMove: ( drawEnv ) => {

    let w = drawEnv.x - ToolSelect._startx
    let h = drawEnv.y - ToolSelect._starty

    drawEnv.saveSelectRect(ToolSelect._startx, ToolSelect._starty, drawEnv.x, drawEnv.y);

    // update canvas clearing from previous select area
    drawEnv.updateEditCanvasFromSelectedPreviewCanvas()
  },

  handleMouseUp: ( drawEnv ) => {
    ToolSelect._storedPreviewImageData = null
    ToolSelect._startx = null
    ToolSelect._starty = null

  },

  handleMouseLeave: ( drawEnv ) => {
    ToolSelect.handleMouseUp()
  }

};

export default ToolSelect
