// ========================================================
// Base Definition
// ========================================================
.mgb-skillsmap-container {
  clear: both;
}

.mgb-skillmap {
  margin-bottom: 2px;
  &.active {
    margin-bottom: 0.5em;
  }

  &:not(.expandable) > .progress > .label .icon {
    display: none;
  }

  // Content
  // ----------------------------------------
  & > .content {
    padding: 0.5em 0 0 0.5em;
    background: #FFF;
    border-left: 2px solid rgba(0, 0, 0, 0.2);

    //
    // Child Leaves
    //
    & > .leaves {
      display: flex;
      flex-wrap: wrap;

      & > .leaf {
        position: relative;
        flex: 1 1 15em;
        transition: background 0.2s, opacity 0.2s, color 0.2s;
        padding: 0.25em 0.25em 0.25em 1.75em;
        margin: 0 0.5em 0.5em 0;
        background: transparent;
        user-select: none;
        cursor: default;
        & > .icon {
          position: absolute;
          left: 0.25em;
          top: 0.375em;
        }
        &.active {
          opacity: 0.8;
          color: rgba(0, 0, 0, 0.4);
        }
      }
    }

    //
    // Nested SkillMap
    //
    & > .mgb-skillmap + .mgb-skillmap {
      margin-top: 0.5em;
      &:last-child {
        border-bottom: 0.5em solid transparent;
      }
    }
  }

  // Progress Bar
  // ----------------------------------------
  & > .progress {
    position: relative;
    display: flex;
    align-items: center;
    // height when there is no label
    min-height: 1em;
    & > .label {
      position: relative;
      padding-left: 0.25em;
      // height with label
      line-height: 1.75em;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      z-index: 1;
      user-select: none;
      .icon {
        opacity: 0.5;
      }
    }
    & > .cells {
      position: absolute;
      display: flex;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      & > .cell {
        flex: 1;
        transition: background 0.2s;
        background: rgba(0, 0, 0, 0.05);
        box-shadow: inset -0.5px 0 0 0 #fff;
        &:first-child:not(.active) {
          border-left: 2px solid rgba(0, 0, 0, 0.2);
        }
      }
    }
  }
}

// ========================================================
// Color Branded Variant Mixins
// ========================================================
// This is called before each mixin to set the variables
// Keep this mixin synced with landing site mock-skillsmap.less
.mgb-set-skillsmap-variant-variables(@mgbAreaColor) {
  @hue: hue(@mgbAreaColor);
  @textColor: hsl(@hue, 40%, 30%);
  @textHoverColor: hsl(@hue, 40%, 20%);
  @barColor: tint(@mgbAreaColor, 65%);
  @barHoverColor: tint(@mgbAreaColor, 55%);
}

// Shareable active progress bar style
.mgb-skillsmap-progress-active() {
  & > .label {
    color: @textHoverColor;
  }
  & > .cells > .cell {
    background: rgba(0, 0, 0, 0.1);
    &:first-child:not(.active) {
      border-left-color: @barHoverColor;
    }
    &.active {
      background: @barHoverColor;
    }
  }
}

// Color Variant Mixin
// ----------------------------------------
// Each skill area has a custom color variation
// We use the hover/active colors by default
// The expandable variation uses lighter colors initially, and hover colors on hover/active
.mgb-skillmap-color-variant(@mgbAreaColor) {
  .mgb-set-skillsmap-variant-variables(@mgbAreaColor);

  // Content
  & > .content {
    border-left-color: @barColor;

    & > .leaves > .leaf {
      color: @textHoverColor;
      &.active {
        color: rgba(0, 0, 0, 0.4);
      }
    }
  }

  // Progress bar
  & > .progress {
    & > .label {
      color: @textHoverColor;
    }
    & > .cells > .cell {
      &:first-child:not(.active) {
        border-left-color: @barHoverColor;
      }
      &.active {
        background: @barHoverColor;
      }
    }
  }
}

// Expandable Mixin
// ----------------------------------------
// The progress bar expands to show the children
.mgb-skillmap-expandable-variant(@mgbAreaColor) {
  .mgb-set-skillsmap-variant-variables(@mgbAreaColor);

  // Content
  & > .content > .leaves > .leaf {
    color: @textColor;
    &.active {
      color: rgba(0, 0, 0, 0.4);
    }
  }

  // Progress bar
  & > .progress {
    cursor: pointer;
    &:hover {
      .mgb-skillsmap-progress-active();
    }
    & > .label {
      color: @textColor;
    }
    & > .cells > .cell {
      &:first-child:not(.active) {
        border-left-color: @barColor;
      }
      &.active {
        background: @barColor;
      }
    }
  }
}

// Toggleable Mixin
// ----------------------------------------
// Child leaves can be toggled
.mgb-skillmap-toggleable-variant(@mgbAreaColor) {
  .mgb-set-skillsmap-variant-variables(@mgbAreaColor);

  // Content
  & > .content > .leaves > .leaf {
    cursor: pointer;
    &:hover {
      background: tint(@barColor, 85%);
    }
  }
}

// ========================================================
// SkillPath Color Variants
// ========================================================
.mgb-skillmap.get-started,
.mgb-skillmap.code {
  @color: green;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.art {
  @color: orange;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.design {
  @color: #B010B0;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.audio {
  @color: #B08080;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.analytics {
  @color: #B02050;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.writing {
  @color: #001020;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.marketing {
  @color: #00B020;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.community {
  @color: #0010B0;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.legal {
  @color: #008080;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}

.mgb-skillmap.business {
  @color: #002050;
  .mgb-skillmap-color-variant(@color);

  &.expandable {
    .mgb-skillmap-expandable-variant(@color);
  }
  &.toggleable {
    .mgb-skillmap-toggleable-variant(@color);
  }
}
