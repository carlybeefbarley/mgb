proxy_cache_path /media/www/cache
                levels=1:2
                keys_zone=mgb:10m
                max_size=1g
                inactive=30m
                use_temp_path=off;

server {
	listen 80;
	listen 443 ssl http2;
	ssl_certificate		/home/kaspars/Projects/mgb/code13/misc/cert.pem;
	ssl_certificate_key	/home/kaspars/Projects/mgb/code13/misc/key.pem;

	server_name "mgb-cache-test.loc";
	charset UTF-8;
	
	# domain names need resolver below is googles
	#resolver 8.8.8.8;
	#set $loc http://v2.mygamebuilder.com;
	set $loc http://127.0.0.1:3000;
	set $api $loc/api/;
	
# 	#proxy_cache_key $scheme$host$uri$is_args$args;
	proxy_cache_key $host$uri$is_args$args;
	
	#cache everything but don't ignore cache-control (otherwise meteor update will create infinite loop)
	location / {
		proxy_cache mgb;
		proxy_cache_valid any 3s; #very small cache - but enough to handle thousands of requests per second

		proxy_cache_bypass $http_nocache;
		proxy_cache_revalidate on;
		# expires 1h;
		
		add_header x-cache-key $host$uri$is_args$args;
		add_header X-Cache-Status $upstream_cache_status;
		
		#this will tell mgb to register this server as cache server
		proxy_set_header x-cache-server $scheme://$host/;#omit port if it's default.. 
		proxy_pass $loc;
	}
		
	#cache overwrite cache-control - as RestAPI by default sets it to no-cache
	location /api/ {
		proxy_cache mgb;
		proxy_cache_valid any 1y;

		proxy_ignore_headers "Cache-Control";
		proxy_ignore_headers "Vary"; # otherwise we will end up with with different version for every browser

		proxy_cache_bypass $http_nocache;
		proxy_cache_revalidate on;
		
		add_header Cache-Control "public, must-revalidate";
		add_header x-cache-key $host$uri$is_args$args;
		add_header X-Cache-Status $upstream_cache_status;
		add_header x-api-loc $api;
		
		
		#this will tell mgb to register this server as cache server
		#proxy_set_header x-cache-server $scheme://$host:$server_port/;
		proxy_set_header x-cache-server $scheme://$host/; #omit port if it's default.. 
		proxy_pass http://127.0.0.1:3000/api/; # why $loc/api/ is not working here????
	}
	
	
	location /sockjs/ {
		# proxy_pass http://v2.mygamebuilder.com/sockjs/;
		proxy_pass http://127.0.0.1:3000/sockjs/;
		
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		#proxy_set_header Host $host;
	}
}

